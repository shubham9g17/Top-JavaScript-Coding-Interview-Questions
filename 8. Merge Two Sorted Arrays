/**
 * Merges two sorted arrays into one sorted array.
 * @param {Array} arr1 - The first sorted array.
 * @param {Array} arr2 - The second sorted array.
 * @returns {Array} - The merged and sorted array.
 */
function mergeSortedArrays(arr1, arr2) {
    let merged = [];
    let i = 0; // Pointer for arr1
    let j = 0; // Pointer for arr2

    // Loop until we reach the end of one array
    while (i < arr1.length && j < arr2.length) {
        if (arr1[i] < arr2[j]) {
            merged.push(arr1[i]);
            i++;
        } else {
            merged.push(arr2[j]);
            j++;
        }
    }

    // If there are remaining elements in arr1, add them
    while (i < arr1.length) {
        merged.push(arr1[i]);
        i++;
    }

    // If there are remaining elements in arr2, add them
    while (j < arr2.length) {
        merged.push(arr2[j]);
        j++;
    }

    return merged;
}

// Example usage:
const sortedArray1 = [1, 3, 5];
const sortedArray2 = [2, 4, 6];
const mergedArray = mergeSortedArrays(sortedArray1, sortedArray2);
console.log(mergedArray); // Output: [1, 2, 3, 4, 5, 6]
